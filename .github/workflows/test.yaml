name: Run tests

on:
  workflow_call:
    inputs:
      url:
        required: true
        type: string

jobs:
  retrieve-job-list:
    outputs:
      jobmatrix: ${{ steps.listjobs.outputs.jobmatrix }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Print trigger
        run: |
          echo "Triggered by ${{ github.event_name }}"
          echo "Input: ${{ inputs.url }}"
      - name: "List jobs"
        id: listjobs
        run: |
          find lava/ -name "*.yaml" -exec sed -i "s|{{ DOWNLOADS_URL }}|${{inputs.url}}|g" '{}' \;
          JOBFILES=$(find lava/ -name *.yaml)
          JOBFILES=$(echo "$JOBFILES" | sed -e "s/^/\"/" | sed -e "s/$/\",/" | tr -d "\n" | sed -e "s/.$//")
          JOBFILES="[${JOBFILES}]"
          J=$(jq -cn --argjson jobfiles "$JOBFILES" '{target: $jobfiles}')
          echo "jobmatrix=$J" >> $GITHUB_OUTPUT
          echo "Preparing testjob files"
      - name: 'Upload test jobs'
        uses: actions/upload-artifact@v4
        with:
          name: testjobs
          path: lava/
    runs-on: ubuntu-latest
  submit-job:
    needs: retrieve-job-list
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.retrieve-job-list.outputs.jobmatrix) }}
    steps:
      - name: 'Download Artifacts ${{ matrix.target }}'
        uses: actions/download-artifact@v4
        with:
          name: testjobs
          path: lava/
      - name: "Update test names"
        run: |
          TARGET=${{ matrix.target }}
          FIND_PATH="${TARGET#*/}"
          MACHINE="${FIND_PATH%/*}"
          find "${{ matrix.target }}" -name "*.yaml" -exec sed -i "s|{{ MACHINE }}|${MACHINE}|g" '{}' \;
          find "${{ matrix.target }}" -name "*.yaml" -exec sed -i "s|{{ AP_NAME }}|${{secrets.AP_NAME}}|g" '{}' \;
          find "${{ matrix.target }}" -name "*.yaml" -exec sed -i "s|{{ AP_PASSWORD }}|${{secrets.AP_PASSWORD}}|g" '{}' \;
          cat "${{ matrix.target }}"
          echo "MACHINE=${MACHINE}" >> $GITHUB_ENV

      - name: Submit ${{ matrix.target }}
        env:
          MACHINE: ${{ env.MACHINE }}
        timeout-minutes: 20
        uses: mwasilew/lava-action@auth-token
        with:
          lava_token: ${{ secrets.LAVA_TOKEN }}
          lava_url: 'lava.infra.foundries.io'
          job_definition: ${{ matrix.target }}
          wait_for_job: true
          fail_action_on_failure: false
          save_result_as_artifact: true
          save_job_details: true
          result_file_name: "${{ env.MACHINE }}"

  publish-test-results:
    name: "Publish Tests Results"
    needs: submit-job
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: "List files"
        run: |
          echo $GITHUB_WORKSPACE
          ls -R $GITHUB_WORKSPACE

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "${{ github.workspace }}/artifacts/**/*.xml"

      - name: Publish Test Job Details
        run: |
          for json_file in $(find ${{ github.workspace }} -name "test-job-*.json")
          do
              DEVICE_TYPE=$(cat "$json_file" | jq -r ".requested_device_type")
              URL=$(cat "$json_file" | jq -r ".url")
              JOB_ID=$(cat "$json_file" | jq -r ".id")
              echo " * [Job $JOB_ID on $DEVICE_TYPE]($URL)"
              echo " * [Job $JOB_ID on $DEVICE_TYPE]($URL)" >> $GITHUB_STEP_SUMMARY
          done

